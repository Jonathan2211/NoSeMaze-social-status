%% check_stability_across_repetitions.m
% Author: Jonathan Reinwald
% Date: January 2025

% Purpose:
% Analyze the stability of metrics (e.g., DSz, Rank) across repetitions for
% different data types (e.g., tube, chasing).

%% Pre-Clearing
clear; clc; close all;

%% Set Directories
main_dir = 'myRootPath/NoSeMaze_Experiment'; % --> NOTE: Replace with own root directory
processed_dir = fullfile(main_dir, 'data', 'processed');
results_dir = fullfile(main_dir, 'results', 'figures', 'cross_cohort', 'stability_across_repetitions');
summary_file = fullfile(processed_dir, 'cross_cohort_files', 'summary_data.mat');

% Add required paths
addpath(genpath(fullfile(main_dir, 'src', 'helpers')));
addpath(genpath(fullfile(main_dir, 'src', 'analysis', 'stability_across_repetitions')));
addpath(genpath(fullfile(main_dir, 'src', 'analysis', 'associations_between_metrics')));

%% Load Summary Data
if ~isfile(summary_file)
    error('Summary file not found. Please run `main_build_cross_cohort_summary` first.');
end
load(summary_file, 'summary_data');

%% Cohort Selection
cohortsTbl = readtable(fullfile(main_dir, 'config', 'cohorts_info.csv'));
cohorts_selection.tube = cohortsTbl(cohortsTbl.use_tube == 1, :);
% IMPORTANT --> which cohorts to select, especially, as exclusion of cohort
% 11-15 makes 2 round first round and 3rd round 2nd round
cohorts_selection.lickport = cohortsTbl(cohortsTbl.use_lickport == 1, :);

%% Define Parameters
data_types = {'tube','lickport'}; % Extendable for other types
metrics.tube = {'DSz_Competition', 'Fraction_Wins_Chasing', 'Fraction_Losses_Chasing', 'cuberoot_Fraction_Wins_Chasing', 'cuberoot_Fraction_Losses_Chasing'};
% {'DSz_Competition', 'Rank_Competition', 'N_Wins_Competition', ...
%     'N_Losses_Competition', 'Fraction_Wins_Competition', 'Fraction_Losses_Competition', ...
%     'DSz_Chasing', 'Rank_Chasing', 'N_Wins_Chasing', 'N_Losses_Chasing', ...
%     'Fraction_Wins_Chasing', 'Fraction_Losses_Chasing', 'detection_count', 'detection_percentage', 'detections_per_day'};
day_ranges.tube = {'D1_21'};%'D1_End','D1_14',}; % Select day_ranges of interest
% metrics.lickport = {'cuberoot_cs_plus_switch_latency_at_cs_median','cuberoot_cs_minus_switch_latency_at_cs_median','cuberoot_cs_plus_switch_latency_at_cs_mean','cuberoot_cs_minus_switch_latency_at_cs_mean',...
%     'kmedoids_cluster','kmeans_cluster','gmm_cluster','cs_plus_switch_mean','cuberoot_cs_plus_switch_mean','cs_minus_switch_mean','cuberoot_cs_minus_switch_mean',...
%     'cuberoot_cs_plus_switch_latency_at_cs_rev1','cuberoot_cs_minus_switch_latency_at_cs_rev1',...
%     'cuberoot_cs_plus_switch_latency_at_cs_rev2','cuberoot_cs_minus_switch_latency_at_cs_rev2',...
%     'cuberoot_cs_plus_switch_latency_at_cs_rev3','cuberoot_cs_minus_switch_latency_at_cs_rev3',...
%     'cuberoot_cs_plus_switch_latency_at_cs_rev4','cuberoot_cs_minus_switch_latency_at_cs_rev4',...
% metrics.lickport = {'cs_plus_switch_latency_at_cs_rev1','cuberoot_cs_plus_switch_latency_at_cs_rev1',...
%     'cs_plus_switch_latency_at_cs_rev2','cuberoot_cs_plus_switch_latency_at_cs_rev2',...
%     'cs_plus_switch_latency_at_cs_rev3','cuberoot_cs_plus_switch_latency_at_cs_rev3',...
%     'cs_plus_switch_latency_at_cs_rev4','cuberoot_cs_plus_switch_latency_at_cs_rev4',...
%     'cs_plus_switch_latency_at_cs_median','cuberoot_cs_plus_switch_latency_at_cs_median',...
%     'cs_minus_switch_latency_at_cs_rev1','cuberoot_cs_minus_switch_latency_at_cs_rev1',...
%     'cs_minus_switch_latency_at_cs_rev2','cuberoot_cs_minus_switch_latency_at_cs_rev2',...
%     'cs_minus_switch_latency_at_cs_rev3','cuberoot_cs_minus_switch_latency_at_cs_rev3',...
%     'cs_minus_switch_latency_at_cs_rev4','cuberoot_cs_minus_switch_latency_at_cs_rev4',...
%     'cs_minus_switch_latency_at_cs_median','cuberoot_cs_minus_switch_latency_at_cs_median',...
%     };
% % % 'correct_hit_rate_allTrials','cuberoot_correct_hit_rate_allTrials',...
% % %     'correct_rejection_rate_allTrials','cuberoot_correct_rejection_rate_allTrials',...
% % %     'baseline_rate_mean_omitfirst','cuberoot_baseline_rate_mean_omitfirst',...
% % %     'cs_plus_modulation_peak','cuberoot_cs_plus_modulation_peak',...
    % 'cs_plus_time_to_criterion_phase1','cuberoot_cs_plus_time_to_criterion_phase1',...
    % 'cs_plus_time_to_criterion_phase2','cuberoot_cs_plus_time_to_criterion_phase2',...
    % 'cs_plus_time_to_criterion_phase3','cuberoot_cs_plus_time_to_criterion_phase3',...
    % 'cs_plus_time_to_criterion_phase4','cuberoot_cs_plus_time_to_criterion_phase4',...
    % 'cs_plus_time_to_criterion_mean','cuberoot_cs_plus_time_to_criterion_mean',...
    % 'cs_minus_time_to_criterion_phase1','cuberoot_cs_minus_time_to_criterion_phase1',...
    % 'cs_minus_time_to_criterion_phase2','cuberoot_cs_minus_time_to_criterion_phase2',...
    % 'cs_minus_time_to_criterion_phase3','cuberoot_cs_minus_time_to_criterion_phase3',...
    % 'cs_minus_time_to_criterion_phase4','cuberoot_cs_minus_time_to_criterion_phase4',...
    % 'cs_minus_time_to_criterion_mean','cuberoot_cs_minus_time_to_criterion_mean',...
    % };
    % 
    % 'cuberoot_cs_plus_time_to_criterion_phase1','cuberoot_cs_plus_time_to_criterion_phase2','cuberoot_cs_plus_time_to_criterion_phase3','cuberoot_cs_plus_time_to_criterion_phase4','cuberoot_cs_plus_time_to_criterion_phase5','cuberoot_cs_plus_time_to_criterion_phase6','cuberoot_cs_plus_time_to_criterion_mean',...
    % 'cuberoot_cs_minus_time_to_criterion_phase1','cuberoot_cs_minus_time_to_criterion_phase2','cuberoot_cs_minus_time_to_criterion_phase3','cuberoot_cs_minus_time_to_criterion_phase4','cuberoot_cs_minus_time_to_criterion_phase5','cuberoot_cs_minus_time_to_criterion_phase6','cuberoot_cs_minus_time_to_criterion_mean',...
metrics.lickport = {'correct_hit_rate_allTrials','cuberoot_correct_hit_rate_allTrials',...
    'baseline_rate_mean_omitfirst','correct_rejection_rate_allTrials','cs_plus_modulation_peak',...
    'cs_plus_switch_latency_at_cs_rev1','cs_plus_switch_latency_at_cs_rev2',...
    'cs_plus_switch_latency_at_cs_rev3','cs_plus_switch_latency_at_cs_rev4',...
    'cs_plus_switch_latency_at_cs_median',...
    'cs_minus_switch_latency_at_cs_rev1',...
    'cs_minus_switch_latency_at_cs_rev2','cs_minus_switch_latency_at_cs_rev3',...
    'cs_minus_switch_latency_at_cs_rev4','cs_minus_switch_latency_at_cs_median',...   
    };
    % 'cs_minus_modulation_min_minus_base','cs_minus_modulation_min',...
    % 'correct_hit_rate',...
    % 'correct_rejection_rate',...
    % 'delay_avoidance_learner',...
    % 'prediction_normalized_lick_diff','prediction_effectsize',...
    % 'cs_plus_ramping',...
    % 'cs_plus_detection_speed','cs_minus_detection_speed',...
    % 'cs_plus_valuation_peak','cs_plus_valuation_time_to_peak','cs_plus_valuation_peak_minus_base'...
    % 'baseline_rate_shaping','cs_plus_switch_latency_at_cs_shaping','cs_minus_switch_latency_at_cs_shaping','delay_avoidance_shaping',...
    % 'cuberoot_baseline_rate_mean_omitfirst','cuberoot_cs_plus_modulation_peak_minus_base','cuberoot_cs_plus_modulation_peak',...
    % 'cuberoot_cs_minus_modulation_min_minus_base','cuberoot_cs_minus_modulation_min',...
    % % 'cuberoot_correct_hit_rate','cuberoot_correct_hit_rate_allTrials',...
    % 'cuberoot_correct_rejection_rate','cuberoot_correct_rejection_rate_allTrials',...
    % 'cuberoot_delay_avoidance_learner',...
    % 'cuberoot_prediction_normalized_lick_diff','cuberoot_prediction_effectsize',...
    % 'cuberoot_cs_plus_ramping',...
    % 'cuberoot_cs_plus_detection_speed','cuberoot_cs_minus_detection_speed',...
    % 'cuberoot_cs_plus_valuation_peak','cuberoot_cs_plus_valuation_time_to_peak','cuberoot_cs_plus_valuation_peak_minus_base'...
day_ranges.lickport = {'D1_End'}; % Select day_ranges of interest
LME_covariates = {''}; % Optional covariates: If none: LME_covariates = {''}

%% Predefine repetion numbers
rep_first = 1;
rep_second = 2;

%% Iterate Through Data Types and Metrics
for type_idx = 1:length(data_types)
    data_type = data_types{type_idx};

    for metric_idx =1:length(metrics.(data_type))
        metric = metrics.(data_type){metric_idx};

        % Create output directory
        metric_output_dir = fullfile(results_dir, data_type, metric);
        if ~isfolder(metric_output_dir)
            mkdir(metric_output_dir);
        end

        % Filter input data
        fields = fieldnames(summary_data.(data_type));
        for field_idx = 1:numel(fields)
            summary_data.(data_type).(fields{field_idx}) = summary_data.(data_type).(fields{field_idx})(ismember(summary_data.(data_type).(fields{field_idx}).cohort,cohorts_selection.(data_type).cohort),:);
        end

        % Process data for each repetition
        [data_rep1,data_rep2,animal_ID,genotype_animals,current_results_table] = plot_and_analyze_repetition_stability(summary_data.(data_type), metric, day_ranges.(data_type), metric_output_dir, LME_covariates, rep_first, rep_second);

        % Save data for each repetition in table
        % Iterate Over Day Ranges
        for day_idx = 1:numel(day_ranges.(data_type))
            range_name = day_ranges.(data_type){day_idx};
            if metric_idx == 1
                myTable_rep1.(range_name) = table(animal_ID,data_rep1.(range_name),'VariableNames',{'Mouse_RFID',[metric '_R1']});
                myTable_rep2.(range_name) = table(animal_ID,data_rep2.(range_name),'VariableNames',{'Mouse_RFID',[metric '_R2']});
                results_table.(range_name)=current_results_table.(range_name);
            else
                myTable_rep1.(range_name) = join(myTable_rep1.(range_name),table(animal_ID,data_rep1.(range_name),'VariableNames',{'Mouse_RFID',[metric '_R1']}),'Keys','Mouse_RFID');
                myTable_rep2.(range_name) = join(myTable_rep2.(range_name),table(animal_ID,data_rep2.(range_name),'VariableNames',{'Mouse_RFID',[metric '_R2']}),'Keys','Mouse_RFID');
                results_table.(range_name)=[results_table.(range_name);current_results_table.(range_name)];
            end
        end
    end
    % Iterate Over Day Ranges
    for day_idx = 1:numel(day_ranges.(data_type))
        range_name = day_ranges.(data_type){day_idx};
        % Generate and plot association matrix
        X_metrics = myTable_rep1.(range_name).Properties.VariableNames(2:end);
        Y_metrics = myTable_rep2.(range_name).Properties.VariableNames(2:end);
        data_table.(range_name) = join(myTable_rep1.(range_name),myTable_rep2.(range_name),'Keys','Mouse_RFID');
        if ~isempty(LME_covariates{1})
            data_table.(range_name) = [data_table.(range_name),table(genotype_animals,'VariableNames',{LME_covariates{1}})];
        end
        output_dir = fullfile(results_dir,data_type,['overview_stability_matrix_' range_name '_R' num2str(rep_first) '_to_R' num2str(rep_second)]);
        if ~isfolder(output_dir)
            mkdir(output_dir);
        end
        generate_and_plot_stability_matrix(data_table, X_metrics, Y_metrics, day_ranges.(data_type), output_dir, 'spearman', LME_covariates);
        % save overview table
        writetable(results_table.(range_name), fullfile(output_dir,['overview_stabilitytable_' range_name '_R' num2str(rep_first) '_to_R' num2str(rep_second) '_cov' LME_covariates{1} '.csv']), 'WriteRowNames', true);
    end
end

disp('Analysis complete. Results saved.');
