# Install required packages if you haven't
install.packages("glmmTMB")
install.packages("readr")
install.packages("DHARMa")  # For diagnostic plots
# Load packages
library(glmmTMB)
library(readr)
library(DHARMa)
# Load data
data <- read_csv(""myRootPath/NoSeMaze_Experiment_Social_Status/analysis/scripts/association_between_metrics/interaction_data.csv")
# Check structure
str(data)
# Check structure
str(data)
# Convert variables to factors
data$quadrant <- as.factor(data$quadrant)
data$group_id <- as.factor(data$group_id)
# Confirm the changes
str(data)
model <- glmmTMB(interaction ~ quadrant + (1 | group_id),
data = data,
family = beta_family(link = "logit"))
# Adjust values exactly at 0 or 1
epsilon <- 1e-4
data$interaction <- pmin(pmax(data$interaction, epsilon), 1 - epsilon)
model <- glmmTMB(interaction ~ quadrant + (1 | group_id),
data = data,
family = beta_family(link = "logit"))
summary(model)
summary(data$interaction)
any(data$interaction <= 0 | data$interaction >= 1)  # Should return FALSE
# Install required packages if you haven't
install.packages("glmmTMB")
install.packages("readr")
install.packages("DHARMa")  # For diagnostic plots
# Load packages
library(glmmTMB)
library(readr)
library(DHARMa)
# Load data
data <- read_csv(""myRootPath/NoSeMaze_Experiment_Social_Status/analysis/scripts/association_between_metrics/interaction_data.csv")
# Check structure
str(data)
# Convert variables to factors
data$quadrant <- as.factor(data$quadrant)
data$group_id <- as.factor(data$group_id)
# Confirm the changes
str(data)
# Adjust values exactly at 0 or 1
epsilon <- 1e-10
data$interaction <- pmin(pmax(data$interaction, epsilon), 1 - epsilon)
model <- glmmTMB(interaction ~ quadrant + (1 | group_id),
data = data,
family = beta_family(link = "logit"))
summary(model)
install.packages("DHARMa")
install.packages("readr")
install.packages("glmmTMB")
# Estimated marginal means on response (original) scale
marginal <- emmeans(model, ~ quadrant, type = "response")
install.packages("emmeans")
# Load packages
library(glmmTMB)
library(readr)
library(DHARMa)
library(emmeans)
library(ggplot2)
# Load data
data <- read_csv(""myRootPath/NoSeMaze_Experiment_Social_Status/analysis/scripts/association_between_metrics/interaction_data.csv")
# Check structure
str(data)
# Convert variables to factors
data$quadrant <- as.factor(data$quadrant)
data$group_id <- as.factor(data$group_id)
# Confirm the changes
str(data)
# Adjust values exactly at 0 or 1
epsilon <- 1e-10
data$interaction <- pmin(pmax(data$interaction, epsilon), 1 - epsilon)
# 1. Model
model <- glmmTMB(interaction ~ quadrant + (1 | group_id),
data = data,
family = beta_family(link = "logit"))
summary(model)
# 2. Back-transforming Predicted Means (to 0â€“1 scale)
# Estimated marginal means on response (original) scale
marginal <- emmeans(model, ~ quadrant, type = "response")
summary(marginal)
# 3. Pairwise Comparisons Between Quadrants
emmeans(model, pairwise ~ quadrant, type = "response")
# 4. Model Diagnostics (DHARMa)
sim_res <- simulateResiduals(model)
plot(sim_res)
# 5. Plot Estimated Means with Error Bars
# Get summary for plotting
df_emm <- as.data.frame(marginal)
ggplot(df_emm, aes(x = quadrant, y = response)) +
geom_bar(stat = "identity", fill = "skyblue") +
geom_errorbar(aes(ymin = asymp.LCL, ymax = asymp.UCL), width = 0.2) +
ylab("Estimated Mean Interaction") +
xlab("Quadrant") +
ggtitle("Estimated Mean Interaction by Quadrant (Beta GLMM)") +
theme_minimal()
# 6. Plot Estimated Means with Error Bars
ggsave("interaction_plot.png", width = 6, height = 4, dpi = 300)
